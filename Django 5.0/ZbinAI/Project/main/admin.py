from django.contrib import admin
from django.utils.safestring import mark_safe
from django.http import HttpResponse
from django.utils import timezone
import csv
import datetime

from .models import Blog, Product, Structure


### üîπ –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV
@staticmethod
def export_to_csv(modeladmin, request, queryset):
    opts = modeladmin.model._meta  # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
    response = HttpResponse(content_type='text/csv')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    response['Content-Disposition'] = f'attachment; filename={opts.verbose_name}.csv'

    writer = csv.writer(response)
    fields = [field for field in opts.get_fields() if not field.many_to_many and not field.one_to_many]

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    writer.writerow([field.verbose_name for field in fields])

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–æ–≤
    for obj in queryset:
        writer.writerow([
            getattr(obj, field.name).strftime('%d/%m/%Y') if isinstance(getattr(obj, field.name), datetime.datetime)
            else getattr(obj, field.name) for field in fields
        ])

    return response

export_to_csv.short_description = '–≠–∫—Å–ø–æ—Ä—Ç –≤ CSV'  # –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ Django Admin



### üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Product
@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    list_display = ('title', 'price', 'discount_price', 'url')  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –ø–æ–ª—è
    list_display_links = ('title', 'price', 'discount_price', 'url')  # –ü–æ–ª—è —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    search_fields = ('title',)  # –ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    actions = [export_to_csv]  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV



### üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Structure
@admin.register(Structure)
class StructureAdmin(admin.ModelAdmin):
    list_display = ('title', 'text')  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –ø–æ–ª—è
    list_display_links = ('title', 'text')  # –ü–æ–ª—è —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    search_fields = ('title',)  # –ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    actions = [export_to_csv]  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV



### üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Blog
@admin.register(Blog)
class BlogAdmin(admin.ModelAdmin):
    list_display = ('title', 'image', 'get_html_photo', 'created', 'publish')  # –ü–æ–ª—è –≤ —Å–ø–∏—Å–∫–µ
    list_display_links = ('title', 'image', 'publish')  # –ü–æ–ª—è-—Å—Å—ã–ª–∫–∏
    search_fields = ('title',)  # –ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    prepopulated_fields = {'slug': ('title',)}  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ slug
    date_hierarchy = 'publish'  # –£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ –ø–æ –¥–∞—Ç–µ
    ordering = ('-publish',)  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º
    actions = [export_to_csv]  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV

    ### üîπ –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∏–Ω–∏–∞—Ç—é—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    def get_html_photo(self, obj):
        if obj.image:
            return mark_safe(f"<img src='{obj.image.url}' width=50>")
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

    get_html_photo.short_description = "–ú–∏–Ω–∏–∞—Ç—é—Ä–∞"  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ